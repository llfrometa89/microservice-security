---
version: 2.1
executors:
  builder:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          TERM: xterm
jobs:
  build:
    executor: builder
    working_directory: ~/security
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}-{{ checksum "./project/build.properties" }}-{{ checksum "./project/plugins.sbt" }}-{{ checksum "./project/Dependencies.scala" }}
      - run:
          name: Run test
          command: ./sbt clean test
#          command: ./sbt clean coverage test
#      - run:
#          name: Run coverage report
#          command: ./sbt coverageReport
#      - run:
#          name: Run codacy coverage
#          command: ./sbt codacyCoverage
      - run:
          name: Run stage
          command: ./sbt stage
      - run:
          name: Before cache delete .lock files
          command: find ../.sbt -name "*.lock" | xargs rm -v
      - run:
          name: Before cache delete ivydata properties file
          command: find ../.ivy2 -name "ivydata-*.properties" | xargs rm -v
      - save_cache:
          paths:
            - ../.m2
            - ../.ivy2/cache
            - ../.sbt/boot/
            - ../.sbt/launchers
          key: v1-dependencies-{{ checksum "build.sbt" }}-{{ checksum "./project/build.properties" }}-{{ checksum "./project/plugins.sbt" }}-{{ checksum "./project/Dependencies.scala" }}
      - persist_to_workspace:
          root: .
          paths:
            - ./target/universal/stage
#            - Dockerfile
#            - init.sh
#            - application.yml.ctmpl
#  publish:
#    executor: publisher
#    working_directory: ~/locations
#    steps:
#      - attach_workspace:
#          at: .
#      - setup_remote_docker
#      - run:
#          name: build, login & upload docker image to gcr
#          command: |
#            REF=${CIRCLE_TAG:-$CIRCLE_BRANCH}
#            echo $GCLOUD_GCR_ADMIN_KEY | docker login -u _json_key --password-stdin https://$GCLOUD_GCR_HOSTNAME
#            docker build -t $GCLOUD_GCR_HOSTNAME/$CIRCLE_PROJECT_REPONAME:$REF .
#            docker push $GCLOUD_GCR_HOSTNAME/$CIRCLE_PROJECT_REPONAME:$REF
workflows:
  version: 2
  locations:
    # build: coverage + stage
    # publish: push image to gcr
    jobs:
      - build:
          # executed: always (PR, branches, master, release)
          # ignored: never
          filters:
            tags:
              only: /.*/
#      - publish:
#          # executed: branches, master, release
#          # ignored: PR
#          requires:
#            - build
#          filters:
#            branches:
#              ignore:
#                - /pull\/.*/
#            tags:
#              only: /.*/
